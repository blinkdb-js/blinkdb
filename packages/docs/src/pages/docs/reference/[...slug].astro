---
import { CollectionEntry, getCollection } from 'astro:content';
import DocsLayout from '../../../layouts/DocsLayout.astro';
import { components } from "../../../components/md/index.astro";
import H2 from '../../../components/md/h2.astro';
import SidebarGroup from '../../../components/sidebar-group.astro';
import HeadingList from '../../../components/heading-list.astro';
import { FrameworkSelect } from '../../../components/framework-select';

export async function getStaticPaths() {
  const blogEntries = await getCollection('reference');
  const withPrefix = (slug: string, prefix?: string) => {
    return prefix ? (slug ? `${prefix}/${slug}` : prefix) : slug;
  }
  const mapToPath = (entry: CollectionEntry<'reference'>, prefix?: string) => {
    return {
      params: { slug: withPrefix(entry.slug !== "index" ? entry.slug : undefined, prefix) },
      props: {
        entry: { ...entry, slug: withPrefix(entry.slug, prefix) },
        entries: blogEntries.filter(e => e.slug !== "index").map(e => ({ ...e, slug: withPrefix(e.slug, prefix) }))
      },
    };
  };
  return [
    // Typescript
    ...blogEntries.map(entry => mapToPath(entry)),
    // React
    ...blogEntries.map(entry => mapToPath(entry, 'react')),
  ];
}

export interface Props {
  entry: CollectionEntry<"reference">;
  entries: CollectionEntry<"reference">[];
};

const { pathname } = Astro.url;
const { entry, entries } = Astro.props;
const { Content, headings } = await entry.render();
---

<DocsLayout bodyClassName="overflow-y-scroll" title={entry.data.title}>
  <div slot="pills">
    <FrameworkSelect className="mr-4" client:load dark frameworkId={pathname.includes('/react') ? 'react' : ''} />
  </div>

  <div slot="links">
    <SidebarGroup title="blinkdb" href="/docs/reference">
      {entries.map(e => (
        <li class="p-0.5"><a href={`/docs/reference/${e.slug}`}>{e.data.title}</a></li>
      ))}
    </SidebarGroup>
  </div>

  <div slot="sidebar-left" class="space-y-4">
    <FrameworkSelect client:load frameworkId={pathname.includes('/react') ? 'react' : ''} />
    <SidebarGroup title="blinkdb" href="/docs/reference">
      {entries.map(e => (
        <li class="p-0.5"><a href={`/docs/reference/${e.slug}`}>{e.data.title}</a></li>
      ))}
    </SidebarGroup>
  </div>

  <div slot="sidebar-right">
    <HeadingList headings={headings} />
  </div>

  <Content components={components} />
  {entry.slug.includes("index") && (
    <div>
      <H2>Content</H2>
      <ul class="grid grid-cols-[repeat(auto-fill,minmax(140px,1fr))] w-full justify-center">
        {entries.map(e => (
          <li class="py-1 underline"><a href={`/docs/reference/${e.slug}`}>{e.data.title}</a></li>
        ))}
      </ul>
    </div>
  )}
</DocsLayout>